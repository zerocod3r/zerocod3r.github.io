{"version":3,"sources":["../../src/utils/babel-loader-helpers.js"],"names":["path","require","_","loadCachedConfig","pluginBabelConfig","stages","test","plugins","presets","process","env","NODE_ENV","join","cwd","getCustomOptions","stage","options","prepareOptions","babel","resolve","reactRuntime","requiredPlugins","createConfigItem","staticQueryDir","type","requiredPresets","push","fallbackPresets","reduxPlugins","reduxPresets","forEach","plugin","name","preset","addRequiredPresetOptions","gatsbyPresetResolved","index","findIndex","p","file","resolved","mergeConfigItemOptions","items","itemToMerge","i","merge","exports"],"mappings":"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","sourcesContent":["const path = require(`path`)\nconst _ = require(`lodash`)\n\nconst loadCachedConfig = () => {\n  let pluginBabelConfig = {\n    stages: {\n      test: { plugins: [], presets: [] },\n    },\n  }\n  if (process.env.NODE_ENV !== `test`) {\n    pluginBabelConfig = require(path.join(\n      process.cwd(),\n      `./.cache/babelState.json`\n    ))\n  }\n  return pluginBabelConfig\n}\n\nconst getCustomOptions = stage => {\n  const pluginBabelConfig = loadCachedConfig()\n  return pluginBabelConfig.stages[stage].options\n}\n\nconst prepareOptions = (babel, options = {}, resolve = require.resolve) => {\n  const pluginBabelConfig = loadCachedConfig()\n\n  const { stage, reactRuntime } = options\n\n  // Required plugins/presets\n  const requiredPlugins = [\n    babel.createConfigItem(\n      [\n        resolve(`babel-plugin-remove-graphql-queries`),\n        { stage, staticQueryDir: `page-data/sq/d` },\n      ],\n      {\n        type: `plugin`,\n      }\n    ),\n  ]\n  const requiredPresets = []\n\n  // Stage specific plugins to add\n  if (stage === `build-html` || stage === `develop-html`) {\n    requiredPlugins.push(\n      babel.createConfigItem([resolve(`babel-plugin-dynamic-import-node`)], {\n        type: `plugin`,\n      })\n    )\n  }\n\n  if (stage === `develop`) {\n    requiredPlugins.push(\n      babel.createConfigItem([resolve(`react-refresh/babel`)], {\n        type: `plugin`,\n      })\n    )\n  }\n\n  // Fallback preset\n  const fallbackPresets = []\n\n  fallbackPresets.push(\n    babel.createConfigItem(\n      [\n        resolve(`babel-preset-gatsby`),\n        {\n          stage,\n          reactRuntime,\n        },\n      ],\n      {\n        type: `preset`,\n      }\n    )\n  )\n\n  // Go through babel state and create config items for presets/plugins from.\n  const reduxPlugins = []\n  const reduxPresets = []\n  pluginBabelConfig.stages[stage].plugins.forEach(plugin => {\n    reduxPlugins.push(\n      babel.createConfigItem([resolve(plugin.name), plugin.options], {\n        name: plugin.name,\n        type: `plugin`,\n      })\n    )\n  })\n  pluginBabelConfig.stages[stage].presets.forEach(preset => {\n    reduxPresets.push(\n      babel.createConfigItem([resolve(preset.name), preset.options], {\n        name: preset.name,\n        type: `preset`,\n      })\n    )\n  })\n\n  return [\n    reduxPresets,\n    reduxPlugins,\n    requiredPresets,\n    requiredPlugins,\n    fallbackPresets,\n  ]\n}\n\nconst addRequiredPresetOptions = (\n  babel,\n  presets,\n  options = {},\n  resolve = require.resolve\n) => {\n  // Always pass `stage` option to babel-preset-gatsby\n  //  (even if defined in custom babelrc)\n  const gatsbyPresetResolved = resolve(`babel-preset-gatsby`)\n  const index = presets.findIndex(p => p.file.resolved === gatsbyPresetResolved)\n\n  if (index !== -1) {\n    presets[index] = babel.createConfigItem(\n      [\n        gatsbyPresetResolved,\n        { ...presets[index].options, stage: options.stage },\n      ],\n      { type: `preset` }\n    )\n  }\n  return presets\n}\n\nconst mergeConfigItemOptions = ({ items, itemToMerge, type, babel }) => {\n  const index = _.findIndex(\n    items,\n    i => i.file.resolved === itemToMerge.file.resolved\n  )\n\n  // If this exist, merge the options, otherwise, add it to the array\n  if (index !== -1) {\n    items[index] = babel.createConfigItem(\n      [\n        itemToMerge.file.resolved,\n        _.merge({}, items[index].options, itemToMerge.options),\n      ],\n      {\n        type,\n      }\n    )\n  } else {\n    items.push(itemToMerge)\n  }\n\n  return items\n}\n\nexports.getCustomOptions = getCustomOptions\n\n// Export helper functions for testing\nexports.prepareOptions = prepareOptions\nexports.mergeConfigItemOptions = mergeConfigItemOptions\nexports.addRequiredPresetOptions = addRequiredPresetOptions\n"],"file":"babel-loader-helpers.js"}