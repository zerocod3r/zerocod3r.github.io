{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/BlogRoll.js","webpack://gatsby-starter-default/./src/pages/index.js"],"names":["BlogRoll","render","posts","this","props","data","allMarkdownRemark","edges","map","post","node","align","class","Link","className","to","frontmatter","path","title","date","React","StaticQuery","query","count","siteTitle","src","withPrefix","type"],"mappings":"uKAIMA,E,6FACJC,OAAA,WAAU,IAEOC,EADEC,KAAKC,MAAdC,KACsBC,kBAAtBC,MAER,OACE,6BACGL,GAASA,EAAMM,KAAI,gBAASC,EAAT,EAAGC,KAAH,OACpB,6BACA,0BACE,sBAAIC,MAAM,OAAOC,MAAM,cACrB,gBAAC,EAAAC,KAAD,CAAMC,UAAU,mCACVC,GAAIN,EAAKO,YAAYC,MAChBR,EAAKO,YAAYE,QAG9B,sBAAIP,MAAM,QAAQC,MAAM,cAAcH,EAAKO,YAAYG,a,GAhB1CC,aAmCvB,eAAe,OACb,gBAAC,EAAAC,YAAD,CACEC,MAAK,aAmBLrB,OAAQ,SAACI,EAAMkB,GAAP,OAAiB,gBAACvB,EAAD,CAAUK,KAAMA,EAAMkB,MAAOA,S,wGCrD1D,qBACE,OACE,gCACA,2BAAST,UAAU,aACnB,uBAAKF,MAAM,aACX,gBAAC,IAAD,CAAQY,UAAU,iBAChB,gBAAC,WAAD,KACE,+BACE,uBAAKV,UAAU,WACb,gBAAC,IAAD,SAIN,yBAAG,0BAAI,iCAAJ,wDACH,gBAAC,IAAD,QAGA,gBAAC,IAAD,KACE,0BAAQW,KAAKC,gBAAW,aAAcC,KAAK","file":"component---src-pages-index-js-eb6204001cc1e833dfdc.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, graphql, StaticQuery } from 'gatsby'\n\nclass BlogRoll extends React.Component {\n  render() {\n    const { data } = this.props;\n    const { edges: posts } = data.allMarkdownRemark;\n\n    return (\n      <table>\n        {posts && posts.map(({ node: post }) => (\n        <tbody>\n        <tr>\n          <td align=\"left\" class=\"index-post\">\n            <Link className=\"title has-text-primary is-size-4\"\n                  to={post.frontmatter.path}>\n                      {post.frontmatter.title}\n            </Link>\n          </td>\n          <td align=\"right\" class=\"index-date\">{post.frontmatter.date}</td>\n        </tr>\n        </tbody>\n        )\n        )}\n          \n      </table>\n    )\n  }\n}\n\nBlogRoll.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array,\n    }),\n  }),\n};\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query BlogRollQuery {\n        allMarkdownRemark(\n          sort: { order: DESC, fields: [frontmatter___date] }\n        ) {\n          edges {\n            node {\n              excerpt(pruneLength: 400)\n              id\n              frontmatter {\n                path\n                title\n                date(formatString: \"MMMM DD, YYYY\")\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data, count) => <BlogRoll data={data} count={count} />}\n  />\n)","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport { withPrefix, Link } from \"gatsby\"\nimport Header from '../components/header'\nimport Footer from '../components/footer'\nimport BlogRoll from '../components/BlogRoll'\n\nexport default () => {\n  return (\n    <>\n    <section className=\"container\">\n    <div class=\"pull-left\">\n    <Header siteTitle=\"zerocoder.sh\" />\n      <React.Fragment>\n        <section>\n          <div className=\"content\">\n            <BlogRoll />\n          </div>\n        </section>\n      </React.Fragment>\n      <p><em><b>Note</b>: These are my opinions on things happening around.</em></p>\n      <Footer />\n      </div>\n      </section>\n      <Helmet>\n        <script src={withPrefix('script.js')} type=\"text/javascript\" />\n      </Helmet>\n    </>)\n}"],"sourceRoot":""}